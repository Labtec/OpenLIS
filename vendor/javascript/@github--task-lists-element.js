const t=new WeakMap;let e=null;function isDragging(){return!!e}function sortable(e,s,n){t.set(e,{sortStarted:s,sortFinished:n});e.addEventListener("dragstart",onDragStart);e.addEventListener("dragenter",onDragEnter);e.addEventListener("dragend",onDragEnd);e.addEventListener("drop",onDrop);e.addEventListener("dragover",onDragOver)}function isBefore(t,e){if(t.parentNode===e.parentNode){let s=t;while(s){if(s===e)return true;s=s.previousElementSibling}}return false}function isSameContainer(t,e){return t.closest("task-lists")===e.closest("task-lists")}function onDragStart(s){if(s.currentTarget!==s.target)return;const n=s.currentTarget;if(!(n instanceof Element))return;const r=n.closest(".contains-task-list");if(!r)return;n.classList.add("is-ghost");s.dataTransfer&&s.dataTransfer.setData("text/plain",(n.textContent||"").trim());if(!n.parentElement)return;const i=Array.from(n.parentElement.children);const o=i.indexOf(n);const a=t.get(n);a&&a.sortStarted(r);e={didDrop:false,dragging:n,dropzone:n,sourceList:r,sourceSibling:i[o+1]||null,sourceIndex:o}}function onDragEnter(t){if(!e)return;const s=t.currentTarget;if(s instanceof Element)if(isSameContainer(e.dragging,s)){t.preventDefault();t.dataTransfer&&(t.dataTransfer.dropEffect="move");if(e.dropzone!==s){e.dragging.classList.add("is-dragging");e.dropzone=s;isBefore(e.dragging,s)?s.before(e.dragging):s.after(e.dragging)}}else t.stopPropagation()}function onDrop(s){if(!e)return;s.preventDefault();s.stopPropagation();const n=s.currentTarget;if(!(n instanceof Element))return;e.didDrop=true;if(!e.dragging.parentElement)return;let r=Array.from(e.dragging.parentElement.children).indexOf(e.dragging);const i=n.closest(".contains-task-list");if(!i)return;if(e.sourceIndex===r&&e.sourceList===i)return;e.sourceList===i&&e.sourceIndex<r&&r++;const o={list:e.sourceList,index:e.sourceIndex};const a={list:i,index:r};const c=t.get(e.dragging);c&&c.sortFinished({src:o,dst:a})}function onDragEnd(){if(e){e.dragging.classList.remove("is-dragging");e.dragging.classList.remove("is-ghost");e.didDrop||e.sourceList.insertBefore(e.dragging,e.sourceSibling);e=null}}function onDragOver(t){if(!e)return;const s=t.currentTarget;if(s instanceof Element)if(isSameContainer(e.dragging,s)){t.preventDefault();t.dataTransfer&&(t.dataTransfer.dropEffect="move")}else t.stopPropagation()}const s=new WeakMap;class TaskListsElement extends HTMLElement{connectedCallback(){this.addEventListener("change",(t=>{const e=t.target;e instanceof HTMLInputElement&&e.classList.contains("task-list-item-checkbox")&&this.dispatchEvent(new CustomEvent("task-lists-check",{bubbles:true,detail:{position:position(e),checked:e.checked}}))}));const t=new MutationObserver(syncState.bind(null,this));s.set(this,t);t.observe(this,{childList:true,subtree:true});syncState(this)}disconnectedCallback(){const t=s.get(this);t&&t.disconnect()}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get sortable(){return this.hasAttribute("sortable")}set sortable(t){t?this.setAttribute("sortable",""):this.removeAttribute("sortable")}static get observedAttributes(){return["disabled"]}attributeChangedCallback(t,e,s){if(e!==s)switch(t){case"disabled":syncDisabled(this);break}}}const n=document.createElement("template");const r=document.createElement("span");r.classList.add("handle");const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.classList.add("drag-handle");i.setAttribute("aria-hidden","true");i.setAttribute("width","16");i.setAttribute("height","16");const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d","M10 13a1 1 0 100-2 1 1 0 000 2zm-4 0a1 1 0 100-2 1 1 0 000 2zm1-5a1 1 0 11-2 0 1 1 0 012 0zm3 1a1 1 0 100-2 1 1 0 000 2zm1-5a1 1 0 11-2 0 1 1 0 012 0zM6 5a1 1 0 100-2 1 1 0 000 2z");n.content.appendChild(r);r.appendChild(i);i.appendChild(o);const a=new WeakMap;function initItem(t){if(a.get(t))return;a.set(t,true);const e=t.closest("task-lists");if(!(e instanceof TaskListsElement))return;if(e.querySelectorAll(".task-list-item").length<=1)return;const s=n.content.cloneNode(true);const r=s.querySelector(".handle");t.prepend(s);if(!r)throw new Error("handle not found");r.addEventListener("mouseenter",onHandleMouseOver);r.addEventListener("mouseleave",onHandleMouseOut);sortable(t,onSortStart,onSorted);t.addEventListener("mouseenter",onListItemMouseOver);t.addEventListener("mouseleave",onListItemMouseOut)}function onListItemMouseOver(t){const e=t.currentTarget;if(!(e instanceof Element))return;const s=e.closest("task-lists");s instanceof TaskListsElement&&s.sortable&&!s.disabled&&e.classList.add("hovered")}function onListItemMouseOut(t){const e=t.currentTarget;e instanceof Element&&e.classList.remove("hovered")}function position(t){const e=taskList(t);if(!e)throw new Error(".contains-task-list not found");const s=t.closest(".task-list-item");const n=Array.from(e.children).filter((t=>"LI"===t.tagName));const r=s?n.indexOf(s):-1;return[listIndex(e),r]}function taskList(t){const e=t.parentElement;return e?e.closest(".contains-task-list"):null}function isRootTaskList(t){return taskList(t)===rootTaskList(t)}function rootTaskList(t){const e=taskList(t);return e?rootTaskList(e)||e:null}function syncState(t){const e=t.querySelectorAll(".contains-task-list > .task-list-item");for(const t of e)isRootTaskList(t)&&initItem(t);syncDisabled(t)}function syncDisabled(t){for(const e of t.querySelectorAll(".task-list-item"))e.classList.toggle("enabled",!t.disabled);for(const e of t.querySelectorAll(".task-list-item-checkbox"))e instanceof HTMLInputElement&&(e.disabled=t.disabled)}function queryLists(t){return Array.from(t.querySelectorAll("ol, ul")).filter((t=>!t.closest("tracking-block")))}function listIndex(t){const e=t.closest("task-lists");if(!e)throw new Error("parent not found");return queryLists(e).indexOf(t)}const c=new WeakMap;function onSortStart(t){const e=t.closest("task-lists");if(!e)throw new Error("parent not found");c.set(e,queryLists(e))}function onSorted({src:t,dst:e}){const s=t.list.closest("task-lists");if(!s)return;const n=c.get(s);if(n){c.delete(s);s.dispatchEvent(new CustomEvent("task-lists-move",{bubbles:true,detail:{src:[n.indexOf(t.list),t.index],dst:[n.indexOf(e.list),e.index]}}))}}function onHandleMouseOver(t){const e=t.currentTarget;if(!(e instanceof Element))return;const s=e.closest(".task-list-item");if(!s)return;const n=s.closest("task-lists");n instanceof TaskListsElement&&n.sortable&&!n.disabled&&s.setAttribute("draggable","true")}function onHandleMouseOut(t){if(isDragging())return;const e=t.currentTarget;if(!(e instanceof Element))return;const s=e.closest(".task-list-item");s&&s.setAttribute("draggable","false")}if(!window.customElements.get("task-lists")){window.TaskListsElement=TaskListsElement;window.customElements.define("task-lists",TaskListsElement)}export{TaskListsElement as default};

