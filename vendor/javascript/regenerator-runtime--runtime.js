var t="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var e={};var r=function(e){var r=Object.prototype;var n=r.hasOwnProperty;var o;var i="function"===typeof Symbol?Symbol:{};var a=i.iterator||"@@iterator";var c=i.asyncIterator||"@@asyncIterator";var u=i.toStringTag||"@@toStringTag";function define(t,e,r){Object.defineProperty(t,e,{value:r,enumerable:true,configurable:true,writable:true});return t[e]}try{define({},"")}catch(t){define=function(t,e,r){return t[e]=r}}function wrap(t,e,r,n){var o=e&&e.prototype instanceof Generator?e:Generator;var i=Object.create(o.prototype);var a=new Context(n||[]);i._invoke=makeInvokeMethod(t,r,a);return i}e.wrap=wrap;function tryCatch(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}var h="suspendedStart";var l="suspendedYield";var f="executing";var s="completed";var y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var v={};define(v,a,(function(){return this||t}));var p=Object.getPrototypeOf;var d=p&&p(p(values([])));d&&d!==r&&n.call(d,a)&&(v=d);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(v);GeneratorFunction.prototype=GeneratorFunctionPrototype;define(g,"constructor",GeneratorFunctionPrototype);define(GeneratorFunctionPrototype,"constructor",GeneratorFunction);GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,"GeneratorFunction");function defineIteratorMethods(t){["next","throw","return"].forEach((function(e){define(t,e,(function(t){return this._invoke(e,t)}))}))}e.isGeneratorFunction=function(t){var e="function"===typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||"GeneratorFunction"===(e.displayName||e.name))};e.mark=function(t){if(Object.setPrototypeOf)Object.setPrototypeOf(t,GeneratorFunctionPrototype);else{t.__proto__=GeneratorFunctionPrototype;define(t,u,"GeneratorFunction")}t.prototype=Object.create(g);return t};e.awrap=function(t){return{__await:t}};function AsyncIterator(e,r){function invoke(t,o,i,a){var c=tryCatch(e[t],e,o);if("throw"!==c.type){var u=c.arg;var h=u.value;return h&&"object"===typeof h&&n.call(h,"__await")?r.resolve(h.__await).then((function(t){invoke("next",t,i,a)}),(function(t){invoke("throw",t,i,a)})):r.resolve(h).then((function(t){u.value=t;i(u)}),(function(t){return invoke("throw",t,i,a)}))}a(c.arg)}var o;function enqueue(t,e){function callInvokeWithMethodAndArg(){return new r((function(r,n){invoke(t,e,r,n)}))}return o=o?o.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}(this||t)._invoke=enqueue}defineIteratorMethods(AsyncIterator.prototype);define(AsyncIterator.prototype,c,(function(){return this||t}));e.AsyncIterator=AsyncIterator;e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))};function makeInvokeMethod(t,e,r){var n=h;return function invoke(o,i){if(n===f)throw new Error("Generator is already running");if(n===s){if("throw"===o)throw i;return doneResult()}r.method=o;r.arg=i;while(true){var a=r.delegate;if(a){var c=maybeInvokeDelegate(a,r);if(c){if(c===y)continue;return c}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===h){n=s;throw r.arg}r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=f;var u=tryCatch(t,e,r);if("normal"===u.type){n=r.done?s:l;if(u.arg===y)continue;return{value:u.arg,done:r.done}}if("throw"===u.type){n=s;r.method="throw";r.arg=u.arg}}}}function maybeInvokeDelegate(t,e){var r=t.iterator[e.method];if(r===o){e.delegate=null;if("throw"===e.method){if(t.iterator.return){e.method="return";e.arg=o;maybeInvokeDelegate(t,e);if("throw"===e.method)return y}e.method="throw";e.arg=new TypeError("The iterator does not provide a 'throw' method")}return y}var n=tryCatch(r,t.iterator,e.arg);if("throw"===n.type){e.method="throw";e.arg=n.arg;e.delegate=null;return y}var i=n.arg;if(!i){e.method="throw";e.arg=new TypeError("iterator result is not an object");e.delegate=null;return y}if(!i.done)return i;e[t.resultName]=i.value;e.next=t.nextLoc;if("return"!==e.method){e.method="next";e.arg=o}e.delegate=null;return y}defineIteratorMethods(g);define(g,u,"Generator");define(g,a,(function(){return this||t}));define(g,"toString",(function(){return"[object Generator]"}));function pushTryEntry(e){var r={tryLoc:e[0]};1 in e&&(r.catchLoc=e[1]);if(2 in e){r.finallyLoc=e[2];r.afterLoc=e[3]}(this||t).tryEntries.push(r)}function resetTryEntry(t){var e=t.completion||{};e.type="normal";delete e.arg;t.completion=e}function Context(e){(this||t).tryEntries=[{tryLoc:"root"}];e.forEach(pushTryEntry,this||t);this.reset(true)}e.keys=function(t){var e=[];for(var r in t)e.push(r);e.reverse();return function next(){while(e.length){var r=e.pop();if(r in t){next.value=r;next.done=false;return next}}next.done=true;return next}};function values(t){if(t){var e=t[a];if(e)return e.call(t);if("function"===typeof t.next)return t;if(!isNaN(t.length)){var r=-1,i=function next(){while(++r<t.length)if(n.call(t,r)){next.value=t[r];next.done=false;return next}next.value=o;next.done=true;return next};return i.next=i}}return{next:doneResult}}e.values=values;function doneResult(){return{value:o,done:true}}Context.prototype={constructor:Context,reset:function(e){(this||t).prev=0;(this||t).next=0;(this||t).sent=(this||t)._sent=o;(this||t).done=false;(this||t).delegate=null;(this||t).method="next";(this||t).arg=o;(this||t).tryEntries.forEach(resetTryEntry);if(!e)for(var r in this||t)"t"===r.charAt(0)&&n.call(this||t,r)&&!isNaN(+r.slice(1))&&((this||t)[r]=o)},stop:function(){(this||t).done=true;var e=(this||t).tryEntries[0];var r=e.completion;if("throw"===r.type)throw r.arg;return(this||t).rval},dispatchException:function(e){if((this||t).done)throw e;var r=this||t;function handle(t,n){c.type="throw";c.arg=e;r.next=t;if(n){r.method="next";r.arg=o}return!!n}for(var i=(this||t).tryEntries.length-1;i>=0;--i){var a=(this||t).tryEntries[i];var c=a.completion;if("root"===a.tryLoc)return handle("end");if(a.tryLoc<=(this||t).prev){var u=n.call(a,"catchLoc");var h=n.call(a,"finallyLoc");if(u&&h){if((this||t).prev<a.catchLoc)return handle(a.catchLoc,true);if((this||t).prev<a.finallyLoc)return handle(a.finallyLoc)}else if(u){if((this||t).prev<a.catchLoc)return handle(a.catchLoc,true)}else{if(!h)throw new Error("try statement without catch or finally");if((this||t).prev<a.finallyLoc)return handle(a.finallyLoc)}}}},abrupt:function(e,r){for(var o=(this||t).tryEntries.length-1;o>=0;--o){var i=(this||t).tryEntries[o];if(i.tryLoc<=(this||t).prev&&n.call(i,"finallyLoc")&&(this||t).prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=r&&r<=a.finallyLoc&&(a=null);var c=a?a.completion:{};c.type=e;c.arg=r;if(a){(this||t).method="next";(this||t).next=a.finallyLoc;return y}return this.complete(c)},complete:function(e,r){if("throw"===e.type)throw e.arg;if("break"===e.type||"continue"===e.type)(this||t).next=e.arg;else if("return"===e.type){(this||t).rval=(this||t).arg=e.arg;(this||t).method="return";(this||t).next="end"}else"normal"===e.type&&r&&((this||t).next=r);return y},finish:function(e){for(var r=(this||t).tryEntries.length-1;r>=0;--r){var n=(this||t).tryEntries[r];if(n.finallyLoc===e){this.complete(n.completion,n.afterLoc);resetTryEntry(n);return y}}},catch:function(e){for(var r=(this||t).tryEntries.length-1;r>=0;--r){var n=(this||t).tryEntries[r];if(n.tryLoc===e){var o=n.completion;if("throw"===o.type){var i=o.arg;resetTryEntry(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){(this||t).delegate={iterator:values(e),resultName:r,nextLoc:n};"next"===(this||t).method&&((this||t).arg=o);return y}};return e}(e);try{t.regeneratorRuntime=r}catch(t){"object"===typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}const n=e.wrap,o=e.isGeneratorFunction,i=e.mark,a=e.awrap,c=e.AsyncIterator,u=e.async,h=e.keys,l=e.values;export default e;export{c as AsyncIterator,u as async,a as awrap,o as isGeneratorFunction,h as keys,i as mark,l as values,n as wrap};

